
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define ALPHABET_SIZE 26
void generateCipherSequence(char keyword[], char cipher[]) {
    int used[ALPHABET_SIZE] = {0};
    int index = 0;
    for (int i = 0; keyword[i]; i++) {
        keyword[i] = toupper(keyword[i]);
    }
    for (int i = 0; keyword[i] != '\0'; i++) {
        if (!used[keyword[i] - 'A']) {
            cipher[index++] = keyword[i];
            used[keyword[i] - 'A'] = 1;
        }
    }
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (!used[ch - 'A']) {
            cipher[index++] = ch;
            used[ch - 'A'] = 1;
        }
    }
    cipher[index] = '\0';
}
void encrypt(char plaintext[], char cipher[], char ciphertext[]) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            int is_lower = islower(plaintext[i]);
            char letter = toupper(plaintext[i]);
            ciphertext[i] = is_lower ? tolower(cipher[letter - 'A']) : cipher[letter - 'A'];
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}
void decrypt(char ciphertext[], char cipher[], char plaintext[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            int is_lower = islower(ciphertext[i]);
            char letter = toupper(ciphertext[i]);
            for (int j = 0; j < ALPHABET_SIZE; j++) {
                if (cipher[j] == letter) {
                    plaintext[i] = is_lower ? tolower('A' + j) : 'A' + j;
                    break;
                }
            }
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}
int main() {
    char keyword[] = "CIPHER";
    char cipher[ALPHABET_SIZE + 1];
    char plaintext[] = "This is a secret message";
    char ciphertext[100];
    char decrypted_text[100];
    generateCipherSequence(keyword, cipher);
    printf("Keyword: %s\n", keyword);
    printf("Cipher: %s\n", cipher);
    encrypt(plaintext, cipher, ciphertext);
    printf("Plaintext: %s\n", plaintext);
    printf("Ciphertext: %s\n", ciphertext);
    decrypt(ciphertext, cipher, decrypted_text);
    printf("Decrypted text: %s\n", decrypted_text);
    return 0;
}




#output
Keyword: CIPHER
Cipher: CIPHERABDFGJKLMNOQSTUVWXYZ
Plaintext: This is a secret message
Ciphertext: Tbds ds c sepqet kesscae
Decrypted text: This is a secret message
