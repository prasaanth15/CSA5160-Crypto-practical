
//#cipher text simple substitution
#include <iostream>
#include <cstring>
using namespace std;

// Function to decrypt the message using the substitution key
void decrypt(char* ciphertext, char* mapping) {
    int len = strlen(ciphertext);
    for (int i = 0; i < len; i++) {
        if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            cout << mapping[ciphertext[i] - 'A'];
        } else {
            cout << ciphertext[i];
        }
    }
}

int main() {
    char ciphertext[] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡8†83 (88)5†;46(;88*96*?;8)‡(;485);5†2:‡(;4956*2(5—4)8¶8* ;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?";
    char mapping[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    char* freq_mapping = new char[26];
    strcpy(freq_mapping, "ETAONRISHDLFCMUGYPWBVKXJQZ"); // Mapping based on frequency analysis

    // Step 1: Decrypt the message using the frequency analysis mapping
    cout << "Decrypted Message:" << endl;
    decrypt(ciphertext, freq_mapping);
    cout << endl;

    delete[] freq_mapping;
    return 0;
}


#output
Decrypted Message:
53ççå305))6*;4826)4ç.)4ç);806*;48å8╢60))85;;]8*;:ç8å83 (88)5å;46(;88*96*?;8)ç(;485);5å2:ç(;4956*2(5ù4)8╢8* ;4069285);)6å8)4çç;1(ç9;48081;8:8ç1;48å85;4)485å528806*81 (ç9;48;(88;4(ç?34;48)4ç;161;:188;ç?
